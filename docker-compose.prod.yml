version: '2'

services:
  postgres:
    image: kiasaki/alpine-postgres:9.5
    env_file: .env
    container_name: postgres
    networks:
      - backend-tier
    volumes:
      - /him_database/postgres:/var/lib/postgresql/data

  nginx:
    restart: always
    image: nginx:1.10.1-alpine
    container_name: nginx
    ports:
      - "443:443"
    volumes_from:
      - django
    volumes:
      - /etc/nginx/conf.d
      - /usr/share/nginx/html
      - /him_database/letsencrypt/certs:/etc/nginx/certs:ro
    links:
      - django:django
    networks:
      - proxy-tier

  nginx-gen:
    image: jwilder/docker-gen:0.7.3
    container_name: nginx-gen
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    links:
      - django:django
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -only-exposed -wait 5s:30s /deployment/nginx-compose-v2.tmpl /etc/nginx/conf.d/default.conf
    depends_on:
      - django

  django:
    build: .
    image: himfoodpantry/pantrydb
    env_file: .env
    container_name: django
    domainname: db.himfoodpantry.org
    environment:
      - VIRTUAL_HOST=db.himfoodpantry.org
      - VIRTUAL_PORT=8000
      - VIRTUAL_NETWORK=himpantrydb_proxy-tier
      - LETSENCRYPT_HOST=db.himfoodpantry.org
      - ALLOWED_HOSTS=db.himfoodpantry.org
    depends_on:
      - postgres
    ports:
     - "8000:80"
    networks:
      - backend-tier
      - proxy-tier

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /him_database/letsencrypt/certs:/etc/nginx/certs:rw
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

networks:
  proxy-tier:
    driver: bridge
  backend-tier:
    driver: bridge